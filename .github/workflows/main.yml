name: Java CI/CD to AWS EKS

on:
  push:
    branches: [ main ]
    paths:
      - 'k8s/**'
      - 'src/**'
      - '.github/workflows/**'

jobs:
#  build:
#    runs-on: ubuntu-latest
#
#    steps:
#    - uses: actions/checkout@v2
#
#    - name: Set up JDK 17
#      uses: actions/setup-java@v2
#      with:
#        java-version: '17'
#        distribution: 'temurin'
#
#    - name: Cache Maven packages
#      uses: actions/cache@v2
#      with:
#        path: ~/.m2
#        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
#        restore-keys: ${{ runner.os }}-m2
#
#    - name: Build with Maven
#      run: mvn clean package -Dmaven.test.skip=true
#
#    - name: Configure AWS credentials
#      uses: aws-actions/configure-aws-credentials@v1
#      with:
#        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
#        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#        aws-region: us-east-1
#
#    - name: Login to Amazon ECR
#      uses: aws-actions/amazon-ecr-login@v1
#
#    - name: Build and Push Docker image to Amazon ECR
#      run: |
#        ECR_REGISTRY=571192913109.dkr.ecr.$AWS_REGION.amazonaws.com
#        ECR_REPOSITORY=gff-container
#        IMAGE_TAG=${GITHUB_SHA}
#
#        docker build -t $ECR_REPOSITORY:$IMAGE_TAG .
#        docker tag $ECR_REPOSITORY:$IMAGE_TAG $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
#        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG


  deploy:
#    needs: build
    runs-on: ubuntu-latest
    environment: production

    steps:
    - uses: actions/checkout@v2

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}

    - name: Install kubectl
      run: |
        curl -LO "https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl"
        chmod +x ./kubectl
        sudo mv ./kubectl /usr/local/bin/kubectl
      
    - name: Create kubeconfig
      run: |
        mkdir ${HOME}/.kube
        echo ${{ secrets.KUBECONFIG }} | base64 --decode > ${HOME}/.kube/config
#        cat ${HOME}/.kube/config
#
#    - name: Use context
#      run: kubectl config use-context soat2-grupo-30-cluster-gff

#    - name: Apply Kubernetes deployment
#      run: |
#        kubectl apply -f k8s/gff-deployment.yaml